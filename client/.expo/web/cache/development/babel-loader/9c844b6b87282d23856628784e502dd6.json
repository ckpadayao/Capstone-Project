{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport YourListsScreen from \"../screens/YourListsScreen\";\nimport AnimeDetailsScreen from \"../screens/AnimeDetailsScreen\";\nimport SearchScreen from \"../screens/SearchScreen\";\nimport AddAnimeScreen from \"../screens/AddAnimeScreen\";\nimport RemoveAnimeScreen from \"../screens/RemoveAnimeScreen\";\nimport CreateListScreen from \"../screens/CreateListScreen\";\nimport SingleListScreen from \"../screens/SingleListScreen\";\nimport AddtoListScreen from \"../screens/AddtoListScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nfunction HomeNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        headerShown: false,\n        swipeEnabled: true\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"AnimeDetails\",\n      component: AnimeDetailsScreen,\n      options: {\n        headerShown: false,\n        swipeEnabled: true,\n        title: \" \"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"AddAnime\",\n      component: AddAnimeScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"RemoveAnime\",\n      component: RemoveAnimeScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"CreateList\",\n      component: CreateListScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"SingleList\",\n      component: SingleListScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"YourLists\",\n      component: YourListsScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"AddtoList\",\n      component: AddtoListScreen,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n}\n\nfunction YourListsNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"YourLists\",\n      component: YourListsScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"AnimeDetails\",\n      component: AnimeDetailsScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"RemoveAnime\",\n      component: RemoveAnimeScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"SingleList\",\n      component: SingleListScreen,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n}\n\nfunction SearchNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Search\",\n      component: SearchScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"AnimeDetails\",\n      component: AnimeDetailsScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"AddAnime\",\n      component: AddAnimeScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"CreateList\",\n      component: CreateListScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"YourLists\",\n      component: YourListsScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"AddtoList\",\n      component: AddtoListScreen,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n}\n\nfunction AppNavigator() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialLayout: {\n        width: Dimensions.get('window').width\n      },\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon() {\n            var iconName;\n\n            if (route.name == \"Home\") {\n              iconName = \"home\";\n            } else if (route.name == \"Recommendations\") {\n              iconName = \"menu-book\";\n            } else if (route.name == \"Search\") {\n              iconName = \"search\";\n            } else if (route.name == \"Your Lists\") {\n              iconName = \"list\";\n            }\n\n            return _jsx(MaterialIcons, {\n              name: iconName,\n              size: 24,\n              color: '#601BA6'\n            });\n          },\n          tabBarLabel: function tabBarLabel(_ref2) {\n            var focused = _ref2.focused;\n            var labelName;\n            var titleStyle = {\n              fontSize: 9,\n              color: focused ? '#0D0D0D' : 'gray'\n            };\n\n            if (route.name == \"Home\") {\n              labelName = \"Home\";\n            } else if (route.name == \"Search\") {\n              labelName = \"Search\";\n            } else if (route.name == \"Your Lists\") {\n              labelName = \"Your List\";\n            }\n\n            return _jsx(Text, {\n              style: titleStyle,\n              children: labelName\n            });\n          }\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeNavigator,\n        options: {\n          swipeEnabled: true,\n          headerTintColor: '#0D0D0D'\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Search\",\n        component: SearchNavigator,\n        options: {\n          swipeEnabled: true,\n          headerTintColor: '#0D0D0D'\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Your Lists\",\n        component: YourListsNavigator,\n        options: {\n          swipeEnabled: true,\n          headerTintColor: '#0D0D0D'\n        }\n      })]\n    })\n  });\n}\n\nexport default AppNavigator;","map":{"version":3,"sources":["/Users/inamorato/Desktop/animo_client/animo/navigation/AppNavigator.js"],"names":["React","NavigationContainer","createBottomTabNavigator","createNativeStackNavigator","MaterialIcons","HomeScreen","SettingsScreen","YourListsScreen","AnimeDetailsScreen","SearchScreen","AddAnimeScreen","RemoveAnimeScreen","CreateListScreen","SingleListScreen","AddtoListScreen","Stack","Tab","HomeNavigator","headerShown","swipeEnabled","title","YourListsNavigator","SearchNavigator","AppNavigator","width","Dimensions","get","route","tabBarIcon","iconName","name","tabBarLabel","focused","labelName","titleStyle","fontSize","color","headerTintColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n// import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\n// import { createDrawerNavigator } from '@react-navigation/drawer';\nimport { MaterialIcons } from '@expo/vector-icons'\nimport { Text, Dimensions } from 'react-native';\n\nimport HomeScreen from '../screens/HomeScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport YourListsScreen from '../screens/YourListsScreen';\nimport AnimeDetailsScreen from '../screens/AnimeDetailsScreen';\nimport SearchScreen from '../screens/SearchScreen';\nimport AddAnimeScreen from '../screens/AddAnimeScreen';\nimport RemoveAnimeScreen from '../screens/RemoveAnimeScreen';\nimport CreateListScreen from '../screens/CreateListScreen';\nimport SingleListScreen from '../screens/SingleListScreen';\nimport AddtoListScreen from '../screens/AddtoListScreen';\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction HomeNavigator() {\n    return (\n        <Stack.Navigator>\n            <Stack.Screen\n                name=\"Home\"\n                component={HomeScreen}\n                options={{ headerShown: false, swipeEnabled: true }}\n            />\n            <Stack.Screen\n                name=\"AnimeDetails\"\n                component={AnimeDetailsScreen}\n                options={{ headerShown: false, swipeEnabled: true, title: \" \" }}\n            // options={{ headerShown: true, swipeEnabled: true, title: \" \" }}\n            />\n\n            <Stack.Screen\n                name=\"AddAnime\"\n                component={AddAnimeScreen}\n                options={{ headerShown: false }}\n            />\n            <Stack.Screen\n                name=\"RemoveAnime\"\n                component={RemoveAnimeScreen}\n                options={{ headerShown: false }}\n            />\n\n            <Stack.Screen\n                name=\"Settings\"\n                component={SettingsScreen}\n                options={{ headerShown: false }}\n            />\n            <Stack.Screen\n                name=\"CreateList\"\n                component={CreateListScreen}\n                options={{ headerShown: false }}\n            />\n            <Stack.Screen\n                name=\"SingleList\"\n                component={SingleListScreen}\n                options={{ headerShown: false }}\n            />\n            <Stack.Screen\n                name=\"YourLists\"\n                component={YourListsScreen}\n                options={{ headerShown: false }}\n            />\n            <Stack.Screen\n                name=\"AddtoList\"\n                component={AddtoListScreen}\n                options={{ headerShown: false }}\n            />\n        </Stack.Navigator>\n    );\n}\n\nfunction YourListsNavigator() {\n    return (\n        <Stack.Navigator>\n            <Stack.Screen\n                name=\"YourLists\"\n                component={YourListsScreen}\n                options={{ headerShown: false }}\n            />\n            <Stack.Screen\n                name=\"AnimeDetails\"\n                component={AnimeDetailsScreen}\n                options={{ headerShown: false }}\n            />\n            <Stack.Screen\n                name=\"RemoveAnime\"\n                component={RemoveAnimeScreen}\n                options={{ headerShown: false }}\n            />\n            <Stack.Screen\n                name=\"SingleList\"\n                component={SingleListScreen}\n                options={{ headerShown: false }}\n            />\n        </Stack.Navigator>\n    );\n}\n\nfunction SearchNavigator() {\n    return (\n        <Stack.Navigator>\n            <Stack.Screen\n                name=\"Search\"\n                component={SearchScreen}\n                options={{ headerShown: false }}\n            />\n            <Stack.Screen\n                name=\"AnimeDetails\"\n                component={AnimeDetailsScreen}\n                options={{ headerShown: false }}\n            />\n            <Stack.Screen\n                name=\"AddAnime\"\n                component={AddAnimeScreen}\n                options={{ headerShown: false }}\n            />\n            <Stack.Screen\n                name=\"CreateList\"\n                component={CreateListScreen}\n                options={{ headerShown: false }}\n            />\n            <Stack.Screen\n                name=\"YourLists\"\n                component={YourListsScreen}\n                options={{ headerShown: false }}\n            />\n            <Stack.Screen\n                name=\"AddtoList\"\n                component={AddtoListScreen}\n                options={{ headerShown: false }}\n            />\n        </Stack.Navigator>\n    );\n}\n\n\nfunction AppNavigator() {\n\n    return (\n        <NavigationContainer>\n            <Tab.Navigator\n                initialLayout={{ width: Dimensions.get('window').width }}\n                screenOptions={({ route }) => ({\n                    tabBarIcon: () => {\n                        let iconName;\n                        if (route.name == \"Home\") {\n                            iconName = \"home\"\n                        }\n                        else if (route.name == \"Recommendations\") {\n                            iconName = \"menu-book\"\n                        }\n                        else if (route.name == \"Search\") {\n                            iconName = \"search\"\n                        }\n                        else if (route.name == \"Your Lists\") {\n                            iconName = \"list\"\n                        }\n                        return <MaterialIcons\n                            name={iconName}\n                            size={24}\n                            color={'#601BA6'}\n                        />\n                    },\n\n                    tabBarLabel: ({ focused }) => {\n                        let labelName;\n                        let titleStyle = {\n                            fontSize: 9,\n                            color: focused ? '#0D0D0D' : 'gray',\n                        };\n\n                        if (route.name == \"Home\") {\n                            labelName = \"Home\"\n                        }\n                        else if (route.name == \"Search\") {\n                            labelName = \"Search\"\n                        }\n                        else if (route.name == \"Your Lists\") {\n                            labelName = \"Your List\"\n                        }\n\n                        return <Text style={titleStyle}>{labelName}</Text>\n\n                    },\n\n                })}\n            >\n                <Tab.Screen\n                    name=\"Home\"\n                    component={HomeNavigator}\n                    options={{\n                        swipeEnabled: true,\n                        headerTintColor: '#0D0D0D',\n                    }}\n                />\n                <Tab.Screen\n                    name=\"Search\"\n                    component={SearchNavigator}\n                    options={{\n                        swipeEnabled: true,\n                        headerTintColor: '#0D0D0D',\n                    }}\n                />\n                <Tab.Screen\n                    name=\"Your Lists\"\n                    component={YourListsNavigator}\n                    options={{\n                        swipeEnabled: true,\n                        headerTintColor: '#0D0D0D',\n                    }}\n                />\n            </Tab.Navigator>\n        </NavigationContainer>\n    );\n}\n\nexport default AppNavigator;"]},"metadata":{},"sourceType":"module"}