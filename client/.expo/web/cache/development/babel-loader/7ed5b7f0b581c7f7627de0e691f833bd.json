{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var FETCH_ANIME_LIST = 'FETCH_ANIME_LIST';\nexport var FETCH_RECOMMENDED_ANIME = 'FETCH_RECOMMENDED_ANIME';\nexport var CREATE_YOUR_LIST = 'CREATE_YOUR_LIST';\nexport var TOGGLE_LIST = 'TOGGLE_LIST';\nexport var fetchAnime = function fetchAnime() {\n  return function _callee(dispatch) {\n    var result, resultData;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://localhost:3000/api/anime'));\n\n          case 2:\n            result = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(result.json());\n\n          case 5:\n            resultData = _context.sent;\n            dispatch({\n              type: FETCH_ANIME_LIST,\n              payload: resultData\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var fetchRecommendedAnime = function fetchRecommendedAnime(_ref) {\n  var genre1 = _ref.genre1,\n      genre2 = _ref.genre2;\n  return function _callee2(dispatch) {\n    var response, responseData;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://localhost:3000/api/anime/genre/' + genre1 + \"/\" + genre2));\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            responseData = _context2.sent;\n            dispatch({\n              type: FETCH_RECOMMENDED_ANIME,\n              payload: responseData\n            });\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var createYourList = function createYourList(_ref2) {\n  var id = _ref2.id,\n      title = _ref2.title,\n      desc = _ref2.desc,\n      list = _ref2.list;\n  return {\n    type: CREATE_YOUR_LIST,\n    payload: {\n      id: id,\n      title: title,\n      desc: desc,\n      list: list\n    }\n  };\n};\nexport var toggleList = function toggleList(listId, anime) {\n  return {\n    type: TOGGLE_LIST,\n    payload: {\n      listId: listId,\n      anime: anime\n    }\n  };\n};","map":{"version":3,"sources":["/Users/inamorato/Desktop/animo_client/animo/redux/actions/animeAction.js"],"names":["FETCH_ANIME_LIST","FETCH_RECOMMENDED_ANIME","CREATE_YOUR_LIST","TOGGLE_LIST","fetchAnime","dispatch","fetch","result","json","resultData","type","payload","fetchRecommendedAnime","genre1","genre2","response","responseData","createYourList","id","title","desc","list","toggleList","listId","anime"],"mappings":";AAAA,OAAO,IAAMA,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC5B,SAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEkBC,KAAK,CAAC,iCAAD,CAFvB;;AAAA;AAEGC,YAAAA,MAFH;AAAA;AAAA,6CAIsBA,MAAM,CAACC,IAAP,EAJtB;;AAAA;AAIGC,YAAAA,UAJH;AAMHJ,YAAAA,QAAQ,CAAC;AACLK,cAAAA,IAAI,EAAEV,gBADD;AAELW,cAAAA,OAAO,EAAEF;AAFJ,aAAD,CAAR;;AANG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAWH,CAZM;AAcP,OAAO,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,OAAwB;AAAA,MAArBC,MAAqB,QAArBA,MAAqB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAEzD,SAAO,kBAAMT,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACoBC,KAAK,CAAC,2CAA2CO,MAA3C,GAAoD,GAApD,GAA0DC,MAA3D,CADzB;;AAAA;AACGC,YAAAA,QADH;AAAA;AAAA,6CAGwBA,QAAQ,CAACP,IAAT,EAHxB;;AAAA;AAGGQ,YAAAA,YAHH;AAKHX,YAAAA,QAAQ,CAAC;AACLK,cAAAA,IAAI,EAAET,uBADD;AAELU,cAAAA,OAAO,EAAEK;AAFJ,aAAD,CAAR;;AALG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAUH,CAZM;AAqBP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,QAA+B;AAAA,MAA5BC,EAA4B,SAA5BA,EAA4B;AAAA,MAAxBC,KAAwB,SAAxBA,KAAwB;AAAA,MAAjBC,IAAiB,SAAjBA,IAAiB;AAAA,MAAXC,IAAW,SAAXA,IAAW;AAEzD,SAAO;AACHX,IAAAA,IAAI,EAAER,gBADH;AAEHS,IAAAA,OAAO,EAAE;AACLO,MAAAA,EAAE,EAAEA,EADC;AAELC,MAAAA,KAAK,EAAEA,KAFF;AAGLC,MAAAA,IAAI,EAAEA,IAHD;AAILC,MAAAA,IAAI,EAAEA;AAJD;AAFN,GAAP;AAUH,CAZM;AAcP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAASC,KAAT,EAAmB;AACzC,SAAO;AACHd,IAAAA,IAAI,EAAEP,WADH;AAEHQ,IAAAA,OAAO,EAAE;AACLY,MAAAA,MAAM,EAAEA,MADH;AAELC,MAAAA,KAAK,EAAEA;AAFF;AAFN,GAAP;AAOH,CARM","sourcesContent":["export const FETCH_ANIME_LIST = 'FETCH_ANIME_LIST';\nexport const FETCH_RECOMMENDED_ANIME = 'FETCH_RECOMMENDED_ANIME';\nexport const CREATE_YOUR_LIST = 'CREATE_YOUR_LIST';\nexport const TOGGLE_LIST = 'TOGGLE_LIST';\n\nexport const fetchAnime = () => {\n    return async dispatch => {\n\n        const result = await fetch('http://localhost:3000/api/anime');\n\n        const resultData = await result.json();\n\n        dispatch({\n            type: FETCH_ANIME_LIST,\n            payload: resultData\n        })\n    }\n}\n\nexport const fetchRecommendedAnime = ({ genre1, genre2 }) => {\n\n    return async dispatch => {\n        const response = await fetch('http://localhost:3000/api/anime/genre/' + genre1 + \"/\" + genre2);\n\n        const responseData = await response.json();\n\n        dispatch({\n            type: FETCH_RECOMMENDED_ANIME,\n            payload: responseData\n        })\n    }\n}\n\n// export const toggleLists = id => {\n//     return {\n//         type: TOGGLE_LISTS,\n//         payload: id\n//     }\n// }\n\nexport const createYourList = ({ id, title, desc, list }) => {\n    // console.log(\"title \" + title + ' desc ' + desc)\n    return {\n        type: CREATE_YOUR_LIST,\n        payload: {\n            id: id,\n            title: title,\n            desc: desc,\n            list: list,\n        }\n\n    }\n}\n\nexport const toggleList = (listId, anime) => {\n    return {\n        type: TOGGLE_LIST,\n        payload: {\n            listId: listId,\n            anime: anime,\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}