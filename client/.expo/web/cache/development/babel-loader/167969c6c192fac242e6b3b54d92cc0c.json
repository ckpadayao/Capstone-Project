{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { FETCH_ANIME_LIST, TOGGLE_LIST, FETCH_RECOMMENDED_ANIME, CREATE_YOUR_LIST } from \"../actions/animeAction\";\nvar initialState = {\n  animeList: [],\n  yourLists: [],\n  recList: []\n};\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ANIME_LIST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        animeList: action.payload\n      });\n\n    case FETCH_RECOMMENDED_ANIME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        recList: action.payload\n      });\n\n    case TOGGLE_LIST:\n      var listIndex = state.yourLists.findIndex(function (list) {\n        return list.id === action.payload.listId;\n      });\n      var animeInList = state.yourLists[listIndex].list.findIndex(function (anime) {\n        return anime._id == action.payload.anime._id;\n      });\n\n      if (animeInList < 0) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          yourLists: [].concat(_toConsumableArray(state.yourLists.slice(0, listIndex)), [_objectSpread(_objectSpread({}, state.yourLists[listIndex]), {}, {\n            list: [].concat(_toConsumableArray(state.yourLists[listIndex].list), [action.payload.anime])\n          })], _toConsumableArray(state.yourLists.slice(listIndex + 1)))\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        yourLists: state.yourLists\n      });\n\n    case CREATE_YOUR_LIST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        yourLists: state.yourLists.concat(action.payload)\n      });\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/Users/inamorato/Desktop/animo_client/animo/redux/reducers/animeReducer.js"],"names":["FETCH_ANIME_LIST","TOGGLE_LIST","FETCH_RECOMMENDED_ANIME","CREATE_YOUR_LIST","initialState","animeList","yourLists","recList","reducer","state","action","type","payload","listIndex","findIndex","list","id","listId","animeInList","anime","_id","slice","concat"],"mappings":";;;;;;;AAAA,SACIA,gBADJ,EAEIC,WAFJ,EAGIC,uBAHJ,EAIIC,gBAJJ;AAQA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,SAAS,EAAE,EAFM;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;AAMA,eAAe,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AAE1D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,gBAAL;AACI,6CACOS,KADP;AAEIJ,QAAAA,SAAS,EAAEK,MAAM,CAACE;AAFtB;;AAIJ,SAAKV,uBAAL;AACI,6CACOO,KADP;AAEIF,QAAAA,OAAO,EAAEG,MAAM,CAACE;AAFpB;;AAKJ,SAAKX,WAAL;AACI,UAAMY,SAAS,GAAGJ,KAAK,CAACH,SAAN,CAAgBQ,SAAhB,CAA0B,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAAP,CAAeK,MAA/B;AAAA,OAA9B,CAAlB;AACA,UAAMC,WAAW,GAAGT,KAAK,CAACH,SAAN,CAAgBO,SAAhB,EAA2BE,IAA3B,CAAgCD,SAAhC,CAA0C,UAAAK,KAAK;AAAA,eAAIA,KAAK,CAACC,GAAN,IAAaV,MAAM,CAACE,OAAP,CAAeO,KAAf,CAAqBC,GAAtC;AAAA,OAA/C,CAApB;;AAEA,UAAIF,WAAW,GAAG,CAAlB,EAAqB;AACjB,+CACOT,KADP;AAEIH,UAAAA,SAAS,+BAEFG,KAAK,CAACH,SAAN,CAAgBe,KAAhB,CAAsB,CAAtB,EAAyBR,SAAzB,CAFE,oCAIEJ,KAAK,CAACH,SAAN,CAAgBO,SAAhB,CAJF;AAKDE,YAAAA,IAAI,+BACGN,KAAK,CAACH,SAAN,CAAgBO,SAAhB,EAA2BE,IAD9B,IAEAL,MAAM,CAACE,OAAP,CAAeO,KAFf;AALH,kCAaFV,KAAK,CAACH,SAAN,CAAgBe,KAAhB,CAAsBR,SAAS,GAAG,CAAlC,CAbE;AAFb;AAkBH;;AAED,6CACOJ,KADP;AAEIH,QAAAA,SAAS,EAAEG,KAAK,CAACH;AAFrB;;AAkBJ,SAAKH,gBAAL;AAEI,6CACOM,KADP;AAEIH,QAAAA,SAAS,EAAEG,KAAK,CAACH,SAAN,CAAgBgB,MAAhB,CAAuBZ,MAAM,CAACE,OAA9B;AAFf;AAzDR;;AA+DA,SAAOH,KAAP;AACH","sourcesContent":["import {\n    FETCH_ANIME_LIST,\n    TOGGLE_LIST,\n    FETCH_RECOMMENDED_ANIME,\n    CREATE_YOUR_LIST\n} from '../actions/animeAction';\n\n\nconst initialState = {\n    animeList: [],\n    yourLists: [],\n    recList: [],\n}\n\nexport default function reducer(state = initialState, action) {\n\n    switch (action.type) {\n        case FETCH_ANIME_LIST:\n            return {\n                ...state,\n                animeList: action.payload\n            }\n        case FETCH_RECOMMENDED_ANIME:\n            return {\n                ...state,\n                recList: action.payload\n            }\n\n        case TOGGLE_LIST:\n            const listIndex = state.yourLists.findIndex(list => list.id === action.payload.listId);\n            const animeInList = state.yourLists[listIndex].list.findIndex(anime => anime._id == action.payload.anime._id);\n\n            if (animeInList < 0) {\n                return {\n                    ...state,\n                    yourLists: [\n                        // shallow copy of first half of yourLists\n                        ...state.yourLists.slice(0, listIndex),\n                        {\n                            ...state.yourLists[listIndex],\n                            list: [\n                                ...state.yourLists[listIndex].list,\n                                action.payload.anime\n                            ]\n\n                        },\n                        // shallow copy of second half of yourLists\n                        // removes potential duplicates of previous lists\n                        ...state.yourLists.slice(listIndex + 1),\n                    ]\n                }\n            }\n\n            return {\n                ...state,\n                yourLists: state.yourLists\n            }\n\n        // const id = state.yourLists.findIndex(anime => anime._id === action.payload)\n        // if (animeId >= 0) {\n        //     const yourLists = [...state.yourLists];\n        //     // yourLists[listId].list.splice(animeId, 1);\n        //     console.log(yourLists)\n        //     return {\n        //         ...state,\n        //         yourLists\n        //     }\n        // }\n        // else {\n        // }\n\n        case CREATE_YOUR_LIST:\n            // add new list to current lists\n            return {\n                ...state,\n                yourLists: state.yourLists.concat(action.payload)\n            }\n\n    }\n    return state;\n}"]},"metadata":{},"sourceType":"module"}