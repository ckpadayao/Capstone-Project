{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport FloatingActionItem from \"./FloatingActionItem\";\nimport AddIcon from \"./AddIcon\";\nimport { isIphoneX } from \"./utils/platform\";\nimport { getTouchableComponent, getRippleProps } from \"./utils/touchable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DEVICE_WIDTH = Dimensions.get(\"window\").width;\nvar DEFAULT_SHADOW_PROPS = {\n  shadowOpacity: 0.35,\n  shadowOffset: {\n    width: 0,\n    height: 5\n  },\n  shadowColor: \"#000000\",\n  shadowRadius: 3\n};\n\nvar FloatingAction = function (_Component) {\n  _inherits(FloatingAction, _Component);\n\n  var _super = _createSuper(FloatingAction);\n\n  function FloatingAction(props) {\n    var _this;\n\n    _classCallCheck(this, FloatingAction);\n\n    _this = _super.call(this, props);\n\n    _this.onKeyboardShow = function (e) {\n      var _this$props = _this.props,\n          buttonSize = _this$props.buttonSize,\n          actionsPaddingTopBottom = _this$props.actionsPaddingTopBottom;\n      var height = e.endCoordinates.height;\n      Animated.parallel([Animated.spring(_this.actionsBottomAnimation, {\n        bounciness: 0,\n        toValue: buttonSize + _this.distanceToVerticalEdge + actionsPaddingTopBottom + height - (isIphoneX() ? 40 : 0),\n        duration: 250,\n        useNativeDriver: false\n      }), Animated.spring(_this.mainBottomAnimation, {\n        bounciness: 0,\n        toValue: _this.distanceToVerticalEdge + height - (isIphoneX() ? 40 : 0),\n        duration: 250,\n        useNativeDriver: false\n      })]).start();\n    };\n\n    _this.onKeyboardHideHide = function () {\n      var _this$props2 = _this.props,\n          buttonSize = _this$props2.buttonSize,\n          actionsPaddingTopBottom = _this$props2.actionsPaddingTopBottom;\n      Animated.parallel([Animated.spring(_this.actionsBottomAnimation, {\n        bounciness: 0,\n        toValue: buttonSize + _this.distanceToVerticalEdge + actionsPaddingTopBottom,\n        duration: 250,\n        useNativeDriver: false\n      }), Animated.spring(_this.mainBottomAnimation, {\n        bounciness: 0,\n        toValue: _this.distanceToVerticalEdge,\n        duration: 250,\n        useNativeDriver: false\n      })]).start();\n    };\n\n    _this.getShadow = function () {\n      var shadow = _this.props.shadow;\n      return _objectSpread(_objectSpread({}, DEFAULT_SHADOW_PROPS), shadow);\n    };\n\n    _this.getIcon = function () {\n      var _this$props3 = _this.props,\n          actions = _this$props3.actions,\n          floatingIcon = _this$props3.floatingIcon,\n          overrideWithAction = _this$props3.overrideWithAction,\n          iconWidth = _this$props3.iconWidth,\n          iconHeight = _this$props3.iconHeight,\n          iconColor = _this$props3.iconColor;\n\n      if (overrideWithAction) {\n        var icon = actions[0].icon;\n\n        if (React.isValidElement(icon)) {\n          return icon;\n        }\n\n        return _jsx(Image, {\n          style: {\n            width: iconWidth,\n            height: iconHeight\n          },\n          source: icon\n        });\n      }\n\n      if (floatingIcon) {\n        if (React.isValidElement(floatingIcon)) {\n          return floatingIcon;\n        }\n\n        return _jsx(Image, {\n          style: {\n            width: iconWidth,\n            height: iconHeight\n          },\n          source: floatingIcon\n        });\n      }\n\n      return _jsx(AddIcon, {\n        width: iconWidth,\n        height: iconHeight,\n        backgroundColor: iconColor\n      });\n    };\n\n    _this.reset = function () {\n      var _this$props4 = _this.props,\n          animated = _this$props4.animated,\n          onClose = _this$props4.onClose;\n\n      if (animated) {\n        Animated.spring(_this.animation, {\n          toValue: 0,\n          useNativeDriver: false\n        }).start();\n        Animated.spring(_this.actionsAnimation, {\n          toValue: 0,\n          useNativeDriver: false\n        }).start();\n      }\n\n      _this.updateState({\n        active: false\n      }, function () {\n        if (onClose) {\n          onClose();\n        }\n      });\n    };\n\n    _this.animateButton = function () {\n      var _this$props5 = _this.props,\n          overrideWithAction = _this$props5.overrideWithAction,\n          actions = _this$props5.actions,\n          floatingIcon = _this$props5.floatingIcon,\n          animated = _this$props5.animated,\n          dismissKeyboardOnPress = _this$props5.dismissKeyboardOnPress,\n          onPressMain = _this$props5.onPressMain,\n          onOpen = _this$props5.onOpen;\n      var active = _this.state.active;\n\n      if (dismissKeyboardOnPress) {\n        Keyboard.dismiss();\n      }\n\n      if (overrideWithAction) {\n        _this.handlePressItem(actions[0].name);\n\n        return;\n      }\n\n      if (onPressMain) {\n        onPressMain(!active);\n      }\n\n      if (!active) {\n        if (!floatingIcon) {\n          if (animated) {\n            Animated.spring(_this.animation, {\n              toValue: 1,\n              useNativeDriver: false\n            }).start();\n          }\n        }\n\n        if (animated) {\n          Animated.spring(_this.actionsAnimation, {\n            toValue: 1,\n            useNativeDriver: false\n          }).start();\n          LayoutAnimation.configureNext({\n            duration: 180,\n            create: {\n              type: LayoutAnimation.Types.easeInEaseOut,\n              property: LayoutAnimation.Properties.opacity\n            }\n          });\n        }\n\n        _this.updateState({\n          active: true\n        }, function () {\n          if (onOpen) {\n            onOpen();\n          }\n        });\n      } else {\n        _this.reset();\n      }\n    };\n\n    _this.updateState = function (nextState, callback) {\n      var onStateChange = _this.props.onStateChange;\n      var active = _this.state.active;\n\n      _this.setState(nextState, function () {\n        if (callback) {\n          callback();\n        }\n\n        if (onStateChange) {\n          onStateChange({\n            isActive: active\n          });\n        }\n      });\n    };\n\n    _this.handlePressBackdrop = function () {\n      var onPressBackdrop = _this.props.onPressBackdrop;\n\n      if (onPressBackdrop) {\n        onPressBackdrop();\n      }\n\n      _this.reset();\n    };\n\n    _this.handlePressItem = function (itemName) {\n      var onPressItem = _this.props.onPressItem;\n\n      if (onPressItem) {\n        onPressItem(itemName);\n      }\n\n      _this.reset();\n    };\n\n    _this.state = {\n      active: false,\n      shouldRender: props.visible ? true : false\n    };\n    _this.mainBottomAnimation = new Animated.Value(_this.distanceToVerticalEdge + props.mainVerticalDistance);\n    _this.actionsBottomAnimation = new Animated.Value(props.buttonSize + _this.distanceToVerticalEdge + props.actionsPaddingTopBottom + props.mainVerticalDistance);\n    _this.animation = new Animated.Value(0);\n    _this.actionsAnimation = new Animated.Value(0);\n    _this.visibleAnimation = new Animated.Value(props.visible ? 0 : 1);\n    _this.fadeAnimation = new Animated.Value(props.visible ? 1 : 0);\n    return _this;\n  }\n\n  _createClass(FloatingAction, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props6 = this.props,\n          openOnMount = _this$props6.openOnMount,\n          listenKeyboard = _this$props6.listenKeyboard;\n\n      if (openOnMount) {\n        this.animateButton();\n      }\n\n      if (listenKeyboard) {\n        var showEvent = Platform.OS === \"ios\" ? \"keyboardWillShow\" : \"keyboardDidShow\";\n        var hideEvent = Platform.OS === \"ios\" ? \"keyboardWillHide\" : \"keyboardDidHide\";\n        this.keyboardWillShowListener = Keyboard.addListener(showEvent, this.onKeyboardShow);\n        this.keyboardWillHideListener = Keyboard.addListener(hideEvent, this.onKeyboardHideHide);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      var visible = this.props.visible;\n\n      if (prevProps.visible !== visible) {\n        if (visible) {\n          this.setState({\n            shouldRender: true\n          });\n          Animated.parallel([Animated.spring(this.visibleAnimation, {\n            toValue: 0,\n            useNativeDriver: false\n          }), Animated.spring(this.fadeAnimation, {\n            toValue: 1,\n            useNativeDriver: false\n          })]).start();\n        }\n\n        if (!visible) {\n          Animated.parallel([Animated.spring(this.visibleAnimation, {\n            toValue: 1,\n            useNativeDriver: false\n          }), Animated.spring(this.fadeAnimation, {\n            toValue: 0,\n            useNativeDriver: false\n          })]).start(function () {\n            return _this2.setState({\n              shouldRender: false\n            });\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var listenKeyboard = this.props.listenKeyboard;\n\n      if (listenKeyboard) {\n        this.keyboardWillShowListener.remove();\n        this.keyboardWillHideListener.remove();\n      }\n    }\n  }, {\n    key: \"distanceToHorizontalEdge\",\n    get: function get() {\n      var distanceToEdge = this.props.distanceToEdge;\n      return typeof distanceToEdge === 'number' ? distanceToEdge : distanceToEdge.horizontal;\n    }\n  }, {\n    key: \"distanceToVerticalEdge\",\n    get: function get() {\n      var distanceToEdge = this.props.distanceToEdge;\n      return typeof distanceToEdge === 'number' ? distanceToEdge : distanceToEdge.vertical;\n    }\n  }, {\n    key: \"renderMainButton\",\n    value: function renderMainButton() {\n      var _this$props7 = this.props,\n          buttonColor = _this$props7.buttonColor,\n          buttonSize = _this$props7.buttonSize,\n          color = _this$props7.color,\n          position = _this$props7.position,\n          overrideWithAction = _this$props7.overrideWithAction,\n          animated = _this$props7.animated;\n      var active = this.state.active;\n\n      if (buttonColor) {\n        console.warn('FloatingAction: \"buttonColor\" property was deprecated. Please use \"color\"');\n      }\n\n      var mainButtonColor = buttonColor || color;\n      var animatedVisibleView;\n      var animatedViewStyle;\n\n      if (animated) {\n        animatedVisibleView = {\n          opacity: this.fadeAnimation,\n          transform: [{\n            rotate: this.visibleAnimation.interpolate({\n              inputRange: [0, 1],\n              outputRange: [\"0deg\", \"90deg\"]\n            })\n          }, {\n            scale: this.visibleAnimation.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0]\n            })\n          }]\n        };\n        animatedViewStyle = {\n          transform: [{\n            rotate: this.animation.interpolate({\n              inputRange: [0, 1],\n              outputRange: [\"0deg\", \"45deg\"]\n            })\n          }]\n        };\n\n        if (overrideWithAction) {\n          animatedViewStyle = {};\n        }\n      } else if (active) {\n        animatedVisibleView = {};\n        animatedViewStyle = {\n          transform: [{\n            rotate: \"45deg\"\n          }]\n        };\n      } else {\n        animatedVisibleView = {};\n        animatedViewStyle = {\n          transform: [{\n            rotate: \"0deg\"\n          }]\n        };\n      }\n\n      var Touchable = getTouchableComponent();\n      var propStyles = {\n        backgroundColor: mainButtonColor,\n        bottom: this.mainBottomAnimation\n      };\n\n      if ([\"left\", \"right\"].indexOf(position) > -1) {\n        propStyles[position] = this.distanceToHorizontalEdge;\n      }\n\n      var sizeStyle = {\n        width: buttonSize,\n        height: buttonSize,\n        borderRadius: buttonSize / 2\n      };\n      return _jsx(Animated.View, {\n        style: [styles.buttonContainer, sizeStyle, styles[position + \"Button\"], propStyles, animatedVisibleView, this.getShadow()],\n        accessible: true,\n        accessibilityLabel: \"Floating Action Button\",\n        children: _jsx(Touchable, _objectSpread(_objectSpread({}, getRippleProps(mainButtonColor)), {}, {\n          style: [styles.button, sizeStyle],\n          activeOpacity: 0.85,\n          onPress: this.animateButton,\n          children: _jsx(Animated.View, {\n            style: [styles.buttonTextContainer, sizeStyle, animatedViewStyle],\n            children: this.getIcon()\n          })\n        }))\n      });\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      var _this3 = this;\n\n      var _this$props8 = this.props,\n          actions = _this$props8.actions,\n          position = _this$props8.position,\n          overrideWithAction = _this$props8.overrideWithAction,\n          distanceToEdge = _this$props8.distanceToEdge,\n          actionsPaddingTopBottom = _this$props8.actionsPaddingTopBottom,\n          animated = _this$props8.animated,\n          tintColor = _this$props8.tintColor;\n      var active = this.state.active;\n\n      if (!actions || actions.length === 0) {\n        return undefined;\n      }\n\n      if (overrideWithAction) {\n        return null;\n      }\n\n      var animatedActionsStyle;\n\n      if (animated) {\n        animatedActionsStyle = {\n          opacity: this.actionsAnimation.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, 1]\n          })\n        };\n      } else {\n        animatedActionsStyle = {\n          opacity: active ? 1 : 0\n        };\n      }\n\n      var actionsStyles = [styles.actions, styles[position + \"Actions\"], animatedActionsStyle, {\n        bottom: this.actionsBottomAnimation\n      }];\n\n      if (active) {\n        actionsStyles.push(styles[position + \"ActionsVisible\"]);\n      }\n\n      var sortedActions = actions.sort(function (a, b) {\n        return a.position - b.position;\n      });\n      return _jsx(Animated.View, {\n        style: actionsStyles,\n        pointerEvents: \"box-none\",\n        children: sortedActions.map(function (action) {\n          var textColor = action.textColor || action.actionsTextColor;\n          var textBackground = action.textBackground || action.actionsTextBackground;\n          var tintColorIcon = action.tintColor || tintColor || '#fff';\n          return _jsx(FloatingActionItem, _objectSpread(_objectSpread({\n            paddingTopBottom: actionsPaddingTopBottom,\n            distanceToEdge: distanceToEdge,\n            textColor: textColor,\n            tintColor: tintColorIcon,\n            textBackground: textBackground,\n            shadow: _this3.getShadow()\n          }, action), {}, {\n            position: position,\n            active: active,\n            onPress: _this3.handlePressItem,\n            animated: animated\n          }), action.name);\n        })\n      });\n    }\n  }, {\n    key: \"renderTappableBackground\",\n    value: function renderTappableBackground() {\n      var overlayColor = this.props.overlayColor;\n      return _jsx(TouchableOpacity, {\n        activeOpacity: 1,\n        style: [styles.overlay, {\n          backgroundColor: overlayColor\n        }],\n        onPress: this.handlePressBackdrop\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          active = _this$state.active,\n          shouldRender = _this$state.shouldRender;\n      var _this$props9 = this.props,\n          showBackground = _this$props9.showBackground,\n          visible = _this$props9.visible;\n\n      if (!shouldRender && !visible) {\n        return null;\n      }\n\n      return _jsxs(Animated.View, {\n        pointerEvents: \"box-none\",\n        style: [styles.overlay, {\n          backgroundColor: \"transparent\"\n        }],\n        children: [active && showBackground && this.renderTappableBackground(), this.renderActions(), this.renderMainButton()]\n      });\n    }\n  }]);\n\n  return FloatingAction;\n}(Component);\n\nFloatingAction.propTypes = {\n  tintColor: PropTypes.string,\n  actions: PropTypes.arrayOf(PropTypes.shape({\n    color: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string.isRequired,\n    buttonSize: PropTypes.number,\n    text: PropTypes.string,\n    textBackground: PropTypes.string,\n    textColor: PropTypes.string,\n    component: PropTypes.func,\n    animated: PropTypes.bool,\n    tintColor: PropTypes.string\n  })),\n  animated: PropTypes.bool,\n  color: PropTypes.string,\n  distanceToEdge: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    vertical: PropTypes.number,\n    horizontal: PropTypes.number\n  })]),\n  mainVerticalDistance: PropTypes.number,\n  visible: PropTypes.bool,\n  overlayColor: PropTypes.string,\n  position: PropTypes.oneOf([\"right\", \"left\", \"center\"]),\n  overrideWithAction: PropTypes.bool,\n  floatingIcon: PropTypes.any,\n  showBackground: PropTypes.bool,\n  openOnMount: PropTypes.bool,\n  actionsPaddingTopBottom: PropTypes.number,\n  buttonSize: PropTypes.number,\n  iconHeight: PropTypes.number,\n  iconWidth: PropTypes.number,\n  listenKeyboard: PropTypes.bool,\n  dismissKeyboardOnPress: PropTypes.bool,\n  shadow: PropTypes.shape({\n    shadowOpacity: PropTypes.number,\n    shadowOffset: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number\n    }),\n    shadowColor: PropTypes.string,\n    shadowRadius: PropTypes.number\n  }),\n  onPressItem: PropTypes.func,\n  onPressMain: PropTypes.func,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  onPressBackdrop: PropTypes.func,\n  onStateChange: PropTypes.func\n};\nFloatingAction.defaultProps = {\n  dismissKeyboardOnPress: false,\n  listenKeyboard: false,\n  actionsPaddingTopBottom: 8,\n  overrideWithAction: false,\n  visible: true,\n  color: \"#1253bc\",\n  overlayColor: \"rgba(68, 68, 68, 0.6)\",\n  position: \"right\",\n  distanceToEdge: 30,\n  openOnMount: false,\n  showBackground: true,\n  buttonSize: 56,\n  iconHeight: 15,\n  iconWidth: 15,\n  iconColor: '#fff',\n  mainVerticalDistance: 0,\n  animated: true,\n  shadow: {}\n};\nvar styles = StyleSheet.create({\n  actions: {\n    position: \"absolute\",\n    bottom: 85,\n    zIndex: 10\n  },\n  rightActions: {\n    alignItems: \"flex-end\",\n    right: -1000\n  },\n  leftActions: {\n    alignItems: \"flex-start\",\n    left: -1000\n  },\n  centerActions: {\n    left: -1000\n  },\n  rightActionsVisible: {\n    right: 0\n  },\n  leftActionsVisible: {\n    left: 0\n  },\n  centerActionsVisible: {\n    left: DEVICE_WIDTH / 2 - 30\n  },\n  overlay: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    top: 0,\n    elevation: 0,\n    zIndex: 0\n  },\n  buttonContainer: {\n    overflow: Platform.OS === \"ios\" ? \"visible\" : \"hidden\",\n    zIndex: 2,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    elevation: 5,\n    position: \"absolute\"\n  },\n  button: {\n    zIndex: 3,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  rightButton: {},\n  leftButton: {},\n  centerButton: {\n    left: DEVICE_WIDTH / 2 - 28\n  },\n  buttonTextContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\nexport default FloatingAction;","map":{"version":3,"sources":["/Users/inamorato/Desktop/animo_client/animo/node_modules/react-native-floating-action/src/FloatingAction.js"],"names":["React","Component","PropTypes","FloatingActionItem","AddIcon","isIphoneX","getTouchableComponent","getRippleProps","DEVICE_WIDTH","Dimensions","get","width","DEFAULT_SHADOW_PROPS","shadowOpacity","shadowOffset","height","shadowColor","shadowRadius","FloatingAction","props","onKeyboardShow","e","buttonSize","actionsPaddingTopBottom","endCoordinates","Animated","parallel","spring","actionsBottomAnimation","bounciness","toValue","distanceToVerticalEdge","duration","useNativeDriver","mainBottomAnimation","start","onKeyboardHideHide","getShadow","shadow","getIcon","actions","floatingIcon","overrideWithAction","iconWidth","iconHeight","iconColor","icon","isValidElement","reset","animated","onClose","animation","actionsAnimation","updateState","active","animateButton","dismissKeyboardOnPress","onPressMain","onOpen","state","Keyboard","dismiss","handlePressItem","name","LayoutAnimation","configureNext","create","type","Types","easeInEaseOut","property","Properties","opacity","nextState","callback","onStateChange","setState","isActive","handlePressBackdrop","onPressBackdrop","itemName","onPressItem","shouldRender","visible","Value","mainVerticalDistance","visibleAnimation","fadeAnimation","openOnMount","listenKeyboard","showEvent","Platform","OS","hideEvent","keyboardWillShowListener","addListener","keyboardWillHideListener","prevProps","remove","distanceToEdge","horizontal","vertical","buttonColor","color","position","console","warn","mainButtonColor","animatedVisibleView","animatedViewStyle","transform","rotate","interpolate","inputRange","outputRange","scale","Touchable","propStyles","backgroundColor","bottom","indexOf","distanceToHorizontalEdge","sizeStyle","borderRadius","styles","buttonContainer","button","buttonTextContainer","tintColor","length","undefined","animatedActionsStyle","actionsStyles","push","sortedActions","sort","a","b","map","action","textColor","actionsTextColor","textBackground","actionsTextBackground","tintColorIcon","overlayColor","overlay","showBackground","renderTappableBackground","renderActions","renderMainButton","propTypes","string","arrayOf","shape","any","isRequired","number","text","component","func","bool","oneOfType","oneOf","defaultProps","StyleSheet","zIndex","rightActions","alignItems","right","leftActions","left","centerActions","rightActionsVisible","leftActionsVisible","centerActionsVisible","top","elevation","overflow","justifyContent","rightButton","leftButton","centerButton","flex"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"; // eslint-disable-line\nimport PropTypes from \"prop-types\";\nimport {\n  StyleSheet,\n  Image,\n  Animated,\n  Dimensions,\n  TouchableOpacity,\n  LayoutAnimation,\n  Platform,\n  Keyboard\n} from \"react-native\";\n\nimport FloatingActionItem from \"./FloatingActionItem\";\nimport AddIcon from \"./AddIcon\";\n\nimport { isIphoneX } from \"./utils/platform\";\nimport { getTouchableComponent, getRippleProps } from \"./utils/touchable\";\n\nconst DEVICE_WIDTH = Dimensions.get(\"window\").width;\n\nconst DEFAULT_SHADOW_PROPS = {\n  shadowOpacity: 0.35,\n  shadowOffset: {\n    width: 0,\n    height: 5\n  },\n  shadowColor: \"#000000\",\n  shadowRadius: 3\n};\n\nclass FloatingAction extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: false,\n      shouldRender: props.visible ? true : false\n    };\n\n    this.mainBottomAnimation = new Animated.Value(\n      this.distanceToVerticalEdge + props.mainVerticalDistance\n    );\n    this.actionsBottomAnimation = new Animated.Value(\n      props.buttonSize +\n      this.distanceToVerticalEdge +\n      props.actionsPaddingTopBottom +\n      props.mainVerticalDistance\n    );\n    this.animation = new Animated.Value(0);\n    this.actionsAnimation = new Animated.Value(0);\n    this.visibleAnimation = new Animated.Value(props.visible ? 0 : 1);\n    /*\n     * this animation will fix an error on ReactNative (Android) where\n     * interpolations with 0 and 1 don't work as expected.\n     */\n    this.fadeAnimation = new Animated.Value(props.visible ? 1 : 0);\n  }\n\n  componentDidMount() {\n    const { openOnMount, listenKeyboard } = this.props;\n\n    if (openOnMount) {\n      this.animateButton();\n    }\n\n    if (listenKeyboard) {\n      const showEvent =\n        Platform.OS === \"ios\" ? \"keyboardWillShow\" : \"keyboardDidShow\";\n      const hideEvent =\n        Platform.OS === \"ios\" ? \"keyboardWillHide\" : \"keyboardDidHide\";\n      this.keyboardWillShowListener = Keyboard.addListener(\n        showEvent,\n        this.onKeyboardShow\n      );\n      this.keyboardWillHideListener = Keyboard.addListener(\n        hideEvent,\n        this.onKeyboardHideHide\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { visible } = this.props;\n\n    if (prevProps.visible !== visible) {\n      if (visible) {\n        this.setState({shouldRender: true});\n        Animated.parallel([\n          Animated.spring(this.visibleAnimation, { toValue: 0, useNativeDriver: false }),\n          Animated.spring(this.fadeAnimation, { toValue: 1, useNativeDriver: false })\n        ]).start();\n      }\n      if (!visible) {\n        Animated.parallel([\n          Animated.spring(this.visibleAnimation, { toValue: 1, useNativeDriver: false }),\n          Animated.spring(this.fadeAnimation, { toValue: 0, useNativeDriver: false })\n        ]).start(() => this.setState({shouldRender: false}));\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { listenKeyboard } = this.props;\n\n    if (listenKeyboard) {\n      this.keyboardWillShowListener.remove();\n      this.keyboardWillHideListener.remove();\n    }\n  }\n\n  get distanceToHorizontalEdge() {\n    const { distanceToEdge } = this.props;\n    return typeof distanceToEdge === 'number'\n      ? distanceToEdge\n      : distanceToEdge.horizontal;\n  }\n\n  get distanceToVerticalEdge() {\n    const { distanceToEdge } = this.props;\n    return typeof distanceToEdge === 'number'\n      ? distanceToEdge\n      : distanceToEdge.vertical;\n  }\n\n  onKeyboardShow = e => {\n    const { buttonSize, actionsPaddingTopBottom } = this.props;\n    const { height } = e.endCoordinates;\n\n    Animated.parallel([\n      Animated.spring(this.actionsBottomAnimation, {\n        bounciness: 0,\n        toValue:\n          buttonSize +\n          this.distanceToVerticalEdge +\n          actionsPaddingTopBottom +\n          height -\n          (isIphoneX() ? 40 : 0),\n        duration: 250,\n        useNativeDriver: false\n      }),\n      Animated.spring(this.mainBottomAnimation, {\n        bounciness: 0,\n        toValue: this.distanceToVerticalEdge + height - (isIphoneX() ? 40 : 0),\n        duration: 250,\n        useNativeDriver: false\n      })\n    ]).start();\n  };\n\n  onKeyboardHideHide = () => {\n    const { buttonSize, actionsPaddingTopBottom } = this.props;\n\n    Animated.parallel([\n      Animated.spring(this.actionsBottomAnimation, {\n        bounciness: 0,\n        toValue: buttonSize + this.distanceToVerticalEdge + actionsPaddingTopBottom,\n        duration: 250,\n        useNativeDriver: false\n      }),\n      Animated.spring(this.mainBottomAnimation, {\n        bounciness: 0,\n        toValue: this.distanceToVerticalEdge,\n        duration: 250,\n        useNativeDriver: false\n      })\n    ]).start();\n  };\n\n  getShadow = () => {\n    const { shadow } = this.props;\n\n    return {\n      ...DEFAULT_SHADOW_PROPS,\n      ...shadow\n    };\n  };\n\n  getIcon = () => {\n    const {\n      actions,\n      floatingIcon,\n      overrideWithAction,\n      iconWidth,\n      iconHeight,\n      iconColor,\n    } = this.props;\n\n    if (overrideWithAction) {\n      const { icon } = actions[0];\n\n      if (React.isValidElement(icon)) {\n        return icon;\n      }\n      return (\n        <Image style={{ width: iconWidth, height: iconHeight }} source={icon} />\n      );\n    }\n\n    if (floatingIcon) {\n      if (React.isValidElement(floatingIcon)) {\n        return floatingIcon;\n      }\n\n      return (\n        <Image\n          style={{ width: iconWidth, height: iconHeight }}\n          source={floatingIcon}\n        />\n      );\n    }\n\n    return <AddIcon width={iconWidth} height={iconHeight} backgroundColor={iconColor} />;\n  };\n\n  reset = () => {\n    const { animated, onClose } = this.props;\n\n    if (animated) {\n      Animated.spring(this.animation, { toValue: 0, useNativeDriver: false }).start();\n      Animated.spring(this.actionsAnimation, { toValue: 0, useNativeDriver: false }).start();\n    }\n    this.updateState(\n      {\n        active: false\n      },\n      () => {\n        if (onClose) {\n          onClose();\n        }\n      }\n    );\n  };\n\n  animateButton = () => {\n    const {\n      overrideWithAction,\n      actions,\n      floatingIcon,\n      animated,\n      dismissKeyboardOnPress,\n      onPressMain,\n      onOpen\n    } = this.props;\n    const { active } = this.state;\n\n    if (dismissKeyboardOnPress) {\n      Keyboard.dismiss();\n    }\n\n    if (overrideWithAction) {\n      this.handlePressItem(actions[0].name);\n\n      return;\n    }\n\n    if (onPressMain) {\n      onPressMain(!active);\n    }\n\n    if (!active) {\n      if (!floatingIcon) {\n        if (animated) {\n          Animated.spring(this.animation, { toValue: 1, useNativeDriver: false }).start();\n        }\n      }\n\n      if (animated) {\n        Animated.spring(this.actionsAnimation, { toValue: 1, useNativeDriver: false }).start();\n\n        // only execute it for the background to prevent extra calls\n        LayoutAnimation.configureNext({\n          duration: 180,\n          create: {\n            type: LayoutAnimation.Types.easeInEaseOut,\n            property: LayoutAnimation.Properties.opacity\n          }\n        });\n      }\n\n      this.updateState(\n        {\n          active: true\n        },\n        () => {\n          if (onOpen) {\n            onOpen();\n          }\n        }\n      );\n    } else {\n      this.reset();\n    }\n  };\n\n  updateState = (nextState, callback) => {\n    const { onStateChange } = this.props;\n    const { active } = this.state;\n\n    this.setState(nextState, () => {\n      if (callback) {\n        callback();\n      }\n      if (onStateChange) {\n        onStateChange({\n          isActive: active\n        });\n      }\n    });\n  };\n\n  handlePressBackdrop = () => {\n    const { onPressBackdrop } = this.props;\n    if (onPressBackdrop) {\n      onPressBackdrop();\n    }\n    this.reset();\n  };\n\n  handlePressItem = itemName => {\n    const { onPressItem } = this.props;\n\n    if (onPressItem) {\n      onPressItem(itemName);\n    }\n\n    this.reset();\n  };\n\n  renderMainButton() {\n    const {\n      // @deprecated in favor of \"color\"\n      buttonColor, // eslint-disable-line\n      buttonSize,\n      color,\n      position,\n      overrideWithAction,\n      animated\n    } = this.props;\n    const { active } = this.state;\n\n    if (buttonColor) {\n      console.warn(\n        'FloatingAction: \"buttonColor\" property was deprecated. Please use \"color\"'\n      );\n    }\n\n    const mainButtonColor = buttonColor || color;\n\n    let animatedVisibleView;\n    let animatedViewStyle;\n\n    if (animated) {\n      animatedVisibleView = {\n        opacity: this.fadeAnimation,\n        transform: [\n          {\n            rotate: this.visibleAnimation.interpolate({\n              inputRange: [0, 1],\n              outputRange: [\"0deg\", \"90deg\"]\n            })\n          },\n          {\n            scale: this.visibleAnimation.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0]\n            })\n          }\n        ]\n      };\n\n      animatedViewStyle = {\n        transform: [\n          {\n            rotate: this.animation.interpolate({\n              inputRange: [0, 1],\n              outputRange: [\"0deg\", \"45deg\"]\n            })\n          }\n        ]\n      };\n\n      if (overrideWithAction) {\n        animatedViewStyle = {};\n      }\n    } else if (active) {\n      animatedVisibleView = {};\n\n      animatedViewStyle = {\n        transform: [\n          {\n            rotate: \"45deg\"\n          }\n        ]\n      };\n    } else {\n      animatedVisibleView = {};\n\n      animatedViewStyle = {\n        transform: [\n          {\n            rotate: \"0deg\"\n          }\n        ]\n      };\n    }\n\n    const Touchable = getTouchableComponent();\n    const propStyles = {\n      backgroundColor: mainButtonColor,\n      bottom: this.mainBottomAnimation // I need to imporove this to run on native thread and not on JS thread\n    };\n\n    if ([\"left\", \"right\"].indexOf(position) > -1) {\n      propStyles[position] = this.distanceToHorizontalEdge;\n    }\n\n    const sizeStyle = {\n      width: buttonSize,\n      height: buttonSize,\n      borderRadius: buttonSize / 2\n    };\n\n    return (\n      <Animated.View\n        style={[\n          styles.buttonContainer,\n          sizeStyle,\n          styles[`${position}Button`],\n          propStyles,\n          animatedVisibleView,\n          this.getShadow()\n        ]}\n        accessible\n        accessibilityLabel=\"Floating Action Button\"\n      >\n        <Touchable\n          {...getRippleProps(mainButtonColor)}\n          style={[styles.button, sizeStyle]}\n          activeOpacity={0.85}\n          onPress={this.animateButton}\n        >\n          <Animated.View\n            style={[styles.buttonTextContainer, sizeStyle, animatedViewStyle]}\n          >\n            {this.getIcon()}\n          </Animated.View>\n        </Touchable>\n      </Animated.View>\n    );\n  }\n\n  renderActions() {\n    const {\n      actions,\n      position,\n      overrideWithAction,\n      distanceToEdge,\n      actionsPaddingTopBottom,\n      animated,\n      tintColor,\n    } = this.props;\n    const { active } = this.state;\n\n    if (!actions || actions.length === 0) {\n      return undefined;\n    }\n\n    if (overrideWithAction) {\n      return null;\n    }\n\n    let animatedActionsStyle;\n\n    if (animated) {\n      animatedActionsStyle = {\n        opacity: this.actionsAnimation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1]\n        })\n      };\n    } else {\n      animatedActionsStyle = { opacity: active ? 1 : 0 };\n    }\n\n    const actionsStyles = [\n      styles.actions,\n      styles[`${position}Actions`],\n      animatedActionsStyle,\n      {\n        bottom: this.actionsBottomAnimation\n      }\n    ];\n\n    if (active) {\n      actionsStyles.push(styles[`${position}ActionsVisible`]);\n    }\n\n    const sortedActions = actions.sort((a, b) => a.position - b.position);\n    return (\n      <Animated.View style={actionsStyles} pointerEvents=\"box-none\">\n        {sortedActions.map(action => {\n          const textColor = action.textColor || action.actionsTextColor;\n          const textBackground =\n            action.textBackground || action.actionsTextBackground;\n          const tintColorIcon =\n            action.tintColor || tintColor || '#fff';\n\n          return (\n            <FloatingActionItem\n              paddingTopBottom={actionsPaddingTopBottom}\n              distanceToEdge={distanceToEdge}\n              key={action.name}\n              textColor={textColor}\n              tintColor={tintColorIcon}\n              textBackground={textBackground}\n              shadow={this.getShadow()}\n              {...action}\n              position={position}\n              active={active}\n              onPress={this.handlePressItem}\n              animated={animated}\n            />\n          );\n        })}\n      </Animated.View>\n    );\n  }\n\n  renderTappableBackground() {\n    const { overlayColor } = this.props;\n\n    // TouchableOpacity don't require a child\n    return (\n      <TouchableOpacity\n        activeOpacity={1}\n        style={[styles.overlay, { backgroundColor: overlayColor }]}\n        onPress={this.handlePressBackdrop}\n      />\n    );\n  }\n\n  render() {\n    const { active, shouldRender } = this.state;\n    const { showBackground, visible } = this.props;\n\n    if (!shouldRender && !visible) {\n      return null;\n    }\n\n    return (\n      <Animated.View\n        pointerEvents=\"box-none\"\n        style={[styles.overlay, { backgroundColor: \"transparent\" }]}\n      >\n        {active && showBackground && this.renderTappableBackground()}\n        {this.renderActions()}\n        {this.renderMainButton()}\n      </Animated.View>\n    );\n  }\n}\n\nFloatingAction.propTypes = {\n  tintColor: PropTypes.string,\n  actions: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string,\n      icon: PropTypes.any,\n      name: PropTypes.string.isRequired,\n      buttonSize: PropTypes.number,\n      text: PropTypes.string,\n      textBackground: PropTypes.string,\n      textColor: PropTypes.string,\n      component: PropTypes.func,\n      animated: PropTypes.bool,\n      tintColor: PropTypes.string\n    })\n  ),\n  animated: PropTypes.bool,\n  color: PropTypes.string,\n  distanceToEdge: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      vertical: PropTypes.number,\n      horizontal: PropTypes.number\n    })\n  ]),\n  mainVerticalDistance: PropTypes.number,\n  visible: PropTypes.bool,\n  overlayColor: PropTypes.string,\n  position: PropTypes.oneOf([\"right\", \"left\", \"center\"]),\n  overrideWithAction: PropTypes.bool, // replace mainAction with first action from actions\n  floatingIcon: PropTypes.any,\n  showBackground: PropTypes.bool,\n  openOnMount: PropTypes.bool,\n  actionsPaddingTopBottom: PropTypes.number,\n  buttonSize: PropTypes.number,\n  iconHeight: PropTypes.number,\n  iconWidth: PropTypes.number,\n  listenKeyboard: PropTypes.bool,\n  dismissKeyboardOnPress: PropTypes.bool,\n  shadow: PropTypes.shape({\n    shadowOpacity: PropTypes.number,\n    shadowOffset: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number\n    }),\n    shadowColor: PropTypes.string,\n    shadowRadius: PropTypes.number\n  }),\n  onPressItem: PropTypes.func,\n  onPressMain: PropTypes.func,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  onPressBackdrop: PropTypes.func,\n  onStateChange: PropTypes.func\n};\n\nFloatingAction.defaultProps = {\n  dismissKeyboardOnPress: false,\n  listenKeyboard: false,\n  actionsPaddingTopBottom: 8,\n  overrideWithAction: false,\n  visible: true,\n  color: \"#1253bc\",\n  overlayColor: \"rgba(68, 68, 68, 0.6)\",\n  position: \"right\",\n  distanceToEdge: 30,\n  openOnMount: false,\n  showBackground: true,\n  buttonSize: 56,\n  iconHeight: 15,\n  iconWidth: 15,\n  iconColor: '#fff',\n  mainVerticalDistance: 0,\n  animated: true,\n  shadow: {}\n};\n\nconst styles = StyleSheet.create({\n  actions: {\n    position: \"absolute\",\n    bottom: 85,\n    zIndex: 10\n  },\n  rightActions: {\n    alignItems: \"flex-end\",\n    right: -1000 // this magic number will make always disspear the text from screen\n  },\n  leftActions: {\n    alignItems: \"flex-start\",\n    left: -1000 // this magic number will make always disspear the text from screen\n  },\n  centerActions: {\n    left: -1000\n  },\n  rightActionsVisible: {\n    right: 0\n  },\n  leftActionsVisible: {\n    left: 0\n  },\n  centerActionsVisible: {\n    left: DEVICE_WIDTH / 2 - 30\n  },\n  overlay: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    top: 0,\n    elevation: 0,\n    zIndex: 0\n  },\n  buttonContainer: {\n    overflow: Platform.OS === \"ios\" ? \"visible\" : \"hidden\",\n    zIndex: 2,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    elevation: 5,\n    position: \"absolute\"\n  },\n  button: {\n    zIndex: 3,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  rightButton: {},\n  leftButton: {},\n  centerButton: {\n    left: DEVICE_WIDTH / 2 - 28\n  },\n  buttonTextContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\n\nexport default FloatingAction;\n"]},"metadata":{},"sourceType":"module"}