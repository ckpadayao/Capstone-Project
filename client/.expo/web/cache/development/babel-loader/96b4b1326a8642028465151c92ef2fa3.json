{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Card from 'animo/components/Card';\nimport { useSelector } from 'react-redux';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SearchList = function SearchList(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      filteredData = _useState2[0],\n      setfilteredData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      masterData = _useState4[0],\n      setmasterData = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      search = _useState6[0],\n      setsearch = _useState6[1];\n\n  var selectAnime = useSelector(function (state) {\n    return state.anime.animeList.sort(function () {\n      return Math.random() > 0.5 ? 1 : -1;\n    });\n  });\n  useEffect(function () {\n    setfilteredData(selectAnime);\n    setmasterData(selectAnime);\n  }, [selectAnime]);\n\n  var searchFilter = function searchFilter(text) {\n    if (text) {\n      var newData = masterData.filter(function (item) {\n        var itemData = item.english_title ? item.english_title.toUpperCase() || item.english_title.toLowerCase() : ''.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setfilteredData(newData);\n      setsearch(text);\n    } else {\n      setfilteredData(masterData);\n      setsearch(text);\n    }\n  };\n\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: styles.searchBar,\n      children: [_jsx(MaterialIcons, {\n        name: 'search',\n        size: 24,\n        style: styles.icon\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Search Anime\",\n        onChangeText: function onChangeText(text) {\n          return searchFilter(text);\n        }\n      })]\n    }), _jsx(View, {\n      style: styles.list,\n      children: _jsx(FlatList, {\n        data: filteredData,\n        keyExtractor: function keyExtractor(item) {\n          return item._id;\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsx(Card, {\n            navigation: props.navigation,\n            image: item.image,\n            title: item.english_title,\n            id: item._id\n          });\n        },\n        showsHorizontalScrollIndicator: false,\n        numColumns: 3\n      })\n    })]\n  });\n};\n\nstyles = StyleSheet.create({\n  searchBar: {\n    marginTop: '7%',\n    flex: 20,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  icon: {\n    color: '#601BA6',\n    padding: 6,\n    marginTop: '3%',\n    height: 50\n  },\n  textInput: {\n    height: 30,\n    flex: 1,\n    paddingTop: 0,\n    paddingRight: 10,\n    paddingBottom: 0,\n    paddingLeft: '1%',\n    backgroundColor: '#fff',\n    color: '#424242'\n  },\n  list: {\n    marginTop: '7%'\n  }\n});\nexport default SearchList;","map":{"version":3,"sources":["/Users/inamorato/Desktop/animo_client/animo/components/search/SearchList.js"],"names":["React","useEffect","useState","Card","useSelector","MaterialIcons","SearchList","props","filteredData","setfilteredData","masterData","setmasterData","search","setsearch","selectAnime","state","anime","animeList","sort","Math","random","searchFilter","text","newData","filter","item","itemData","english_title","toUpperCase","toLowerCase","textData","indexOf","styles","searchBar","icon","textInput","list","_id","navigation","image","StyleSheet","create","marginTop","flex","flexDirection","justifyContent","alignItems","backgroundColor","color","padding","height","paddingTop","paddingRight","paddingBottom","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n    StyleSheet,\n    View,\n    Text,\n    FlatList,\n    TextInput,\n} from 'react-native';\nimport Card from 'animo/components/Card';\nimport { useSelector } from 'react-redux';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nconst SearchList = props => {\n    const [filteredData, setfilteredData] = useState([]);\n    const [masterData, setmasterData] = useState([]);\n    const [search, setsearch] = useState('');\n\n\n    const selectAnime = useSelector(\n        state => state.anime.animeList.sort(() => (Math.random() > 0.5) ? 1 : -1)\n    );\n\n    useEffect(() => {\n        setfilteredData(selectAnime);\n        setmasterData(selectAnime);\n    }, [selectAnime])\n\n    const searchFilter = (text) => {\n        if (text) {\n            const newData = masterData.filter((item) => {\n                const itemData = item.english_title ? (item.english_title.toUpperCase() || item.english_title.toLowerCase())\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            setfilteredData(newData);\n            setsearch(text);\n        }\n        else {\n            setfilteredData(masterData);\n            setsearch(text);\n        }\n    }\n\n    return (\n        <View>\n            <View style={styles.searchBar}>\n                <MaterialIcons\n                    name={'search'}\n                    size={24}\n                    style={styles.icon}\n                />\n                <TextInput\n                    style={styles.textInput}\n                    placeholder=\"Search Anime\"\n                    onChangeText={(text) => searchFilter(text)}\n                />\n            </View>\n            <View style={styles.list}>\n                <FlatList\n                    // horizontal={true}\n                    data={filteredData}\n                    keyExtractor={item => item._id}\n                    renderItem={({ item }) =>\n                        <Card\n                            navigation={props.navigation}\n                            image={item.image}\n                            title={item.english_title}\n                            id={item._id}\n\n                        />\n                    }\n                    showsHorizontalScrollIndicator={false}\n                    numColumns={3}\n                />\n            </View>\n        </View>\n    );\n}\n\nstyles = StyleSheet.create({\n\n    searchBar: {\n        marginTop: '7%',\n        flex: 20,\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#fff',\n\n    },\n\n    icon: {\n        color: '#601BA6',\n        padding: 6,\n        marginTop: '3%',\n        height: 50\n    },\n\n    textInput: {\n        height: 30,\n        flex: 1,\n        paddingTop: 0,\n        paddingRight: 10,\n        paddingBottom: 0,\n        paddingLeft: '1%',\n        backgroundColor: '#fff',\n        color: '#424242',\n    },\n\n    list: {\n        marginTop: '7%',\n    }\n\n})\n\nexport default SearchList;"]},"metadata":{},"sourceType":"module"}